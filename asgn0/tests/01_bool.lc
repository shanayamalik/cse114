
-------------------------------------------------------------------------------
-- DO NOT MODIFY THIS SEGMENT
-------------------------------------------------------------------------------

let TRUE  = \x y -> x
let FALSE = \x y -> y
let ITE   = \b x y -> b x y
let NOT   = \b x y -> b y x
let AND   = \b1 b2 -> ITE b1 b2 FALSE
let OR    = \b1 b2 -> ITE b1 TRUE b2

-------------------------------------------------------------------------------
-- YOU SHOULD ONLY MODIFY THE TEXT BELOW, JUST THE PARTS MARKED AS COMMENTS
-------------------------------------------------------------------------------

eval not_false :
  NOT FALSE
  =d> (\b x y -> b y x) FALSE           -- Expand NOT
  =b> (\x y -> FALSE y x)               -- Apply FALSE to b
  =d> (\x y -> (\x y -> y) y x)         -- Expand FALSE (keeping original variables)
  =b> (\x y -> (\y -> y) x)             -- Apply y to (\x y -> y)
  =b> (\x y -> x)                       -- Apply x to (\y -> y)
  =d> TRUE                              -- Recognize TRUE

eval and_false_true:
  AND FALSE TRUE
  =d> (\b1 b2 -> ITE b1 b2 FALSE) FALSE TRUE    -- Expand AND
  =b> (\b2 -> ITE FALSE b2 FALSE) TRUE          -- Apply FALSE to b1
  =b> ITE FALSE TRUE FALSE                      -- Apply TRUE to b2
  =d> (\b x y -> b x y) FALSE TRUE FALSE        -- Expand ITE
  =b> (\x y -> FALSE x y) TRUE FALSE            -- Apply FALSE to b
  =d> (\x y -> (\x y -> y) x y) TRUE FALSE      -- Expand FALSE
  =b> (\y -> (\x y -> y) TRUE y) FALSE          -- Apply TRUE to x
  =b> (\x y -> y) TRUE FALSE                    -- Apply FALSE to y
  =b> (\y -> y) FALSE                           -- Apply TRUE
  =b> FALSE                                     -- Apply FALSE

eval or_true_false:
  OR TRUE FALSE
  =d> (\b1 b2 -> ITE b1 TRUE b2) TRUE FALSE     -- Expand OR
  =b> (\b2 -> ITE TRUE TRUE b2) FALSE           -- Apply TRUE to b1
  =b> ITE TRUE TRUE FALSE                       -- Apply FALSE to b2
  =d> (\b x y -> b x y) TRUE TRUE FALSE         -- Expand ITE
  =b> (\x y -> TRUE x y) TRUE FALSE             -- Apply TRUE to b
  =d> (\x y -> (\x y -> x) x y) TRUE FALSE      -- Expand TRUE
  =b> (\y -> (\x y -> x) TRUE y) FALSE          -- Apply TRUE to x
  =b> (\x y -> x) TRUE FALSE                    -- Apply FALSE to y
  =b> (\y -> TRUE) FALSE                       -- Apply TRUE
  =b> TRUE                                     -- Apply FALSE
